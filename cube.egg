name = RotatingCube

(
import pyglet
from pyglet.gl import *

def cube():
    # create window and enable depth testing
    window = pyglet.window.Window(800, 600, caption='Rotating Cube')
    glEnable(GL_DEPTH_TEST)
    angle = [0.0]

    @window.event
    def on_draw():
        window.clear()
        glLoadIdentity()
        glTranslatef(0.0, 0.0, -5.0)
        glRotatef(angle[0], 1.0, 1.0, 1.0)

        # draw a colored cube
        glBegin(GL_QUADS)
        # front (red)
        glColor3f(1, 0, 0)
        glVertex3f(-1, -1,  1)
        glVertex3f( 1, -1,  1)
        glVertex3f( 1,  1,  1)
        glVertex3f(-1,  1,  1)
        # back (green)
        glColor3f(0, 1, 0)
        glVertex3f(-1, -1, -1)
        glVertex3f(-1,  1, -1)
        glVertex3f( 1,  1, -1)
        glVertex3f( 1, -1, -1)
        # left (blue)
        glColor3f(0, 0, 1)
        glVertex3f(-1, -1, -1)
        glVertex3f(-1, -1,  1)
        glVertex3f(-1,  1,  1)
        glVertex3f(-1,  1, -1)
        # right (yellow)
        glColor3f(1, 1, 0)
        glVertex3f(1, -1, -1)
        glVertex3f(1,  1, -1)
        glVertex3f(1,  1,  1)
        glVertex3f(1, -1,  1)
        # top (cyan)
        glColor3f(0, 1, 1)
        glVertex3f(-1,  1, -1)
        glVertex3f(-1,  1,  1)
        glVertex3f( 1,  1,  1)
        glVertex3f( 1,  1, -1)
        # bottom (magenta)
        glColor3f(1, 0, 1)
        glVertex3f(-1, -1, -1)
        glVertex3f( 1, -1, -1)
        glVertex3f( 1, -1,  1)
        glVertex3f(-1, -1,  1)
        glEnd()

    def update(dt):
        angle[0] += dt * 50

    pyglet.clock.schedule(update)
    pyglet.app.run()
CODE = ended
)

commands
cube = cube
